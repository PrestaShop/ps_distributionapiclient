name: PHP tests
on: [ push, pull_request ]
jobs:
  # Check there is no syntax errors in the project
  php-linter:
    name: PHP Syntax check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: PHP syntax checker 8.1
        uses: prestashop/github-action-php-lint/8.1@master

      - name: PHP syntax checker 8.2
        uses: prestashop/github-action-php-lint/8.2@master

      - name: PHP syntax checker 8.3
        uses: prestashop/github-action-php-lint/8.3@master

      - name: PHP syntax checker 8.4
        uses: prestashop/github-action-php-lint/8.4@master

  # Check the PHP code follow the coding standards
  php-cs-fixer:
    name: PHP-CS-Fixer
    runs-on: ubuntu-latest
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}

      - name: Install dependencies
        run: composer install

      - name: Run PHP-CS-Fixer
        run: ./vendor/bin/php-cs-fixer fix --dry-run --diff --using-cache=no

  # Run PHPStan against the module and a PrestaShop release
  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        presta-version: [ 'nightly', '9.0.x' ]
        # The 8.4 compatibility is not available yet, this should be uncommented whe the dockers are ready
        # php-version: [ '8.1', '8.2', '8.3', '8.4' ]
        php-version: [ '8.1', '8.2', '8.3' ]
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: Checkout
        uses: actions/checkout@v2.0.0

      # Add vendor folder in cache to make next builds faster
      - name: Cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}

      # Add composer local folder in cache to make next builds faster
      - name: Cache composer folder
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php-composer-cache

      - run: composer install

      # Docker images prestashop/prestashop may be used, even if the shop remains uninstalled
      - name: Execute PHPStan on PrestaShop (Tag ${{ matrix.presta-version }}-${{ matrix.php-version }})
        run: ./tests/phpstan.sh ${{ matrix.presta-version }} ${{ matrix.php-version }}

  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ '8.1', '8.2', '8.3', '8.4' ]
    timeout-minutes: 5
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Checkout
        uses: actions/checkout@v2.0.0

      # Add vendor folder in cache to make next builds faster
      - name: Cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}

      # Add composer local folder in cache to make next builds faster
      - name: Cache composer folder
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php-composer-cache

      - run: composer install

      - name: PHPUnit
        run: ./vendor/bin/phpunit -c ./tests/phpunit.xml
